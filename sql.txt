insert into ConceptControlFile 
values

// The regular expression to match the proposal folders.
 public const string ufunc_proposal_data_wizard_ProposalRegex = "^[0-9]{4}-[0-9]{2}-[0-9]{2}-p(?<proposalLevel>[0-9]+)(?:-proposal-data)*$";

 // The regular expression to match the part number with a trailing date.        
 public const string ufunc_proposal_data_wizard_PartNumberWithDateRegex =
     @"^(TSG|R)\d+([ps][0-9]+)?[-\s_](?<partNumber>.+)[-\s_][0-9]{4}[-\s_][0-9]{1,2}[-\s_][0-9]{1,2}.*$";

 // The regular expression to match the TSG\R level of a part.
 public const string ufunc_proposal_data_wizard_RLevel = "^(?<identifier>TSG|R)(?<level>\\d+).+";
														
 public const string _printerCts = "\\\\ctsfps1.cts.toolingsystemsgroup.com\\CTS Office MFC";


:DESCRIPTION_TITLES
DESCRIPTION'),
:END:

:DESCRIPTION_IGNORE_VALUES:
(\d+\.\d+)|(\d+\.)|(\.\d+)'),
:END:

:SIZE_TITLES:
DESCRIPTION'),
:END:


//(\d+)(?<=(\d+))

//\s*see[-_ ]?3d[-_ ]?data\s*




:DOUBLE_DECIMAL_REGEX:
(\d+\.?\d*|\.\d*)'),
:END:

// The difference between this and "DOUBLE_DECIMAL_REGEX" is that this won't match integers.
// It requires that a decimal must be present in the number in order to match.
:DOUBLE_DECIMAL_REQUIRE_PERIOD_REGEX:
(\d+\.\d*|\.\d*)'),

('SIZE_DESCRIPTION_IGNORE_PATHS_REGEX', '^G:\\0Library\\.*\.prt$'),
('SIZE_DESCRIPTION_IGNORE_PATHS_REGEX', '^W:\\.*\.prt$'),

('CBORE_DEPTH_MATCH_PATHS_REGEX', '[0-9]{4,}-[0-9]{3}-[0-9]{3}'),
('DETAIL_STRUCTURE_REGEX', '[0-9]{4,}-[0-9]{3}-[0-9]{3}'),


('', ''),
:INTERPART_EXPRESSIONS_GFOLDER_REGEX_MATCH:
\\([0-9]{1,}) \([a-z]{1,}-[0-9]{1,}\)\\.*\.prt$'),
:END:


:GuideBushings_GuidePins_Titles:
LibraryPath'),
:END:

:GuideBushings_GuidePins_Values:
GuideBushings'),
GuidePins'),
:END:




:CBORE_DEPTH_TITLES_1:
MATERIAL'),
:END:

:SIZE_DESCRIPTION_TITLES_1:
MATERIAL'),
:END:

:CASTING_MATERIALS_TITLES:
MATERIAL'),
:END:



///////////////////////////////////////


  --ExportStrip
    __work_part_.Layers.SetState(1, State.WorkLayer);

--ExportStrip
 for (int i = 2; i <= 256; i++)
     __work_part_.Layers.SetState(i, State.Hidden);

--ExportStrip
 new[] { 6, 10, 200, 201, 202, 254 }.ToList()
     .ForEach(i => __work_part_.Layers.SetState(i, State.Selectable));


('DrawDie_', ''),
:SMART_KEY_SEED_FILE:
G:\0Library\Keys\Smart Key Metric.prt'),
:END:

('DrawDie_', ''),
:SMART_MISUMI_NEST_GAUGES:
G:\0Library\Gauges\Misumi\Smart Misumi-nest-gauges.prt'),
:END:

('DrawDie_', ''),
:SEED_PART:
G:\0Library\SeedFiles\Components\seed-base.prt'),
:END:

:REFERENCE_BOOLEANS:
// Subtract, Intersect, Unite
{UPPER_CAVITY},{^OP(\s*|-|_)020(\s*|-|_)UPR(\s*|-|_)3D$},{Subtract},{0}'),
{LOWER_BINDER},{^OP(\s*|-|_)020(\s*|-|_)LWR(\s*|-|_)3D$},{Subtract},{0}'),
{LOWER_BINDER},{^OP(\s*|-|_)020(\s*|-|_)PAD(\s*|-|_)PROFILE$},{Subtract},{0}'),
{LOWER_BINDER},{^OP(\s*|-|_)020(\s*|-|_)BINDER(\s*|-|_)3D(.*)WITH(\s*|-|_)PROFILE$},{Subtract},{1}'),
{LOWER_POST},{^OP(\s*|-|_)020(\s*|-|_)LWR(\s*|-|_)3D$},{Subtract},{0}'),
{LOWER_POST},{^OP(\s*|-|_)020(\s*|-|_)LWR(\s*|-|_)PROFILE$},{Intersect},{0}'),
{LOWER_POST},{^OP(\s*|-|_)\d{3}(\s*|-|_)LWR(\s*|-|_)3D(.*)WITH(\s*|-|_)PROFILE$},{Subtract},{1}'),
:END:
('DrawDie_', ''),
:STRIP_CONTROL_MATERIAL_TITLE:
M
:END:
///////////////////////////////////////

///////////////////////////////////////




//([0-9]\.[0-9]*)

//:DOUBLE_DECIMAL_REQUIRE_PERIOD_REGEX:
//(\d+\.\d*|\.\d*)'),
//:END:

:SIZE_DESCRIPTION_REGEX:
([0-9]*\.[0-9]{2,3}).*\s*X\s*([0-9]*\.[0-9]{2,3}).*\s*X\s*([0-9]*\.[0-9]{2,3}).*'),
:END:

:SIZE_DESCRIPTION_BURN_REGEX:
//^Burn\s*(?<BurnHeight>\d+\.?\d*)
^Burn\s*(?<BurnHeight>(\d+\.\d+)|(\d+\.)|(\.\d+))'),
:END:

																	
																						
 

 public static readonly int[] Layers = { 1, 94, 100, 111, 200, 230 };


  public static object[] ComboOperationItems()
 {
     return new object[]
     {
         "b", "d1",
         "d2", "d3",
         "d4", "d5",
         "d6", "d7",
         "d8", "d9",
         "d10", "d11",
         "d12", "d13",
         "d14", "d15",
         "d16", "RefData",
         "MidSurfCurve", "t1",
         "t2", "t3",
         "t4", "t5",
         "t6", "t7",
         "t8", "t9",
         "t10", "t11",
         "t12", "t13",
         "t14", "t15",
         "t16", "Unfold"
     };
 }

 public static object[] ComboSurfaceItems()
 {
     return new object[] { "lwr", "upr", "Pad Profile" };
 }

 public static object[] ComboVersionItems()
 {
     List<object> list = new List<object>();

     for (int index = 1; index <= 999; index++)
         list.Add($"v{(index > 9 ? index + "" : $"0{index}")}");

     return list.ToArray();
 }

 public static object[] ComboToolSideItems()
 {
     return new object[] { "lwr", "upr", "post", "pad", "punch", "lifter" };
 }

  public class SimDataDeletion
 {
     public const string _simActive = "P:\\CTS_SIM\\Active";
 }
